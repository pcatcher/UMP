MODULE Receipt;

// задаем зависимости от других модулей 
REQUIRE Stock, Item, LegalEntity;

// задаем классы для всех приходных и расходных документов
CLASS Receipt 'Приходная накладная';                // для шапки
CLASS ReceiptDetail 'Строка приходной накладной';   // для спецификации

// создается свойство receipt, через которое у каждой строки приходной накладной будет ссылка на шапку
// благодаря NONULL - значение всегда должно быть заполнено  
// DELETE - при удалении Receipt, все ссылающиеся на него ReceiptDetail будут удалены
receipt 'Документ строки' = DATA Receipt (ReceiptDetail) NONULL DELETE;

// создается свойство index, 
index 'Номер строки' (ReceiptDetail d) =     // что означает появление d ?
        PARTITION SUM 1 IF d IS ReceiptDetail           // имя класса ReceiptDetail, вернет его id
        ORDER d BY receipt(d);                          // сортировка по 

// создается свойство number класса Receipt, тип фикс. строковое значение 10 символов
number 'Номер накладной' = DATA BPSTRING[10] (Receipt);
// свойство date класса Receipt, тип дата
date 'Дата накладной' = DATA DATE (Receipt);


// свойство supplier, DATA LegalEntity (Receipt) вместо типа указываем название модуля ??
supplier 'Поставщик' = DATA LegalEntity (Receipt);

// непонятная конструкция ??? что за аргумент r ?
nameSupplier 'Наименование поставщика' (Receipt r) = name(supplier(r));

// создается свойство stock, которое будет служить ссылкой на класс Stock 
stock 'Склад' = DATA Stock (Receipt);
nameStock 'Наименование склада' (Receipt r) = name(stock(r));

// Свойство item, для ссылки на класс Item
item 'Товар' = DATA Item (ReceiptDetail);
// свойство nameItem,сылка на свойство name  классе item
nameItem 'Наименование товара' (ReceiptDetail d) = name(item(d));

// свойство quantity, формат данных числовое значение до 16 символов, до 4 знаков после запятой
// принадлежит классу ReceiptDetail
quantity 'Количество' = DATA NUMERIC[16,4] (ReceiptDetail);
// свойство price и его формат
price 'Цена поставщика' = DATA NUMERIC[17,2] (ReceiptDetail);
// свойство парсит по id класса ReceiptDetail каждый его эксзепляр по свойствам quantity и price
// получает результат произведения 
sum 'Сумма поставщика' (ReceiptDetail d) = quantity(d) * price(d);


FORM receipt 'Приходная накладная'                          // задаем имя формы и пользв. представление
    OBJECTS r = Receipt PANEL                               // задаем аргумент для парса класса Receipt 
    PROPERTIES(r) number, date, nameSupplier, nameStock     // получаем значения свойств 

    OBJECTS d = ReceiptDetail                               // задаем аргумент для парса класса Receipt 
    PROPERTIES(d) index, nameItem, quantity, price, sum READONLY, NEW, DELETE GRID
    // аолучаем значения по аргументу d
    FILTERS receipt(d) = r                                  // фильтр только по объектам Receipt

    EDIT Receipt OBJECT r           // форма будет использована по умолчанию
;


FORM receipts 'Приходные накладные'
    OBJECTS r = Receipt
    PROPERTIES(r) READONLY number, date, nameSupplier, nameStock
    PROPERTIES(r) NEWSESSION NEW, EDIT, DELETE

    OBJECTS d = ReceiptDetail
    PROPERTIES(d) READONLY index, nameItem, quantity, price, sum
    FILTERS receipt(d) = r
;